/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables;


import com.nanhu.model.sys.Keys;
import com.nanhu.model.sys.SpringBoot;
import com.nanhu.model.sys.tables.records.SysPermissionFunoperationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 权限操作关联表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermissionFunoperation extends TableImpl<SysPermissionFunoperationRecord> {

    private static final long serialVersionUID = -358035769;

    /**
     * The reference instance of <code>spring_boot.sys_permission_funoperation</code>
     */
    public static final SysPermissionFunoperation SYS_PERMISSION_FUNOPERATION = new SysPermissionFunoperation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysPermissionFunoperationRecord> getRecordType() {
        return SysPermissionFunoperationRecord.class;
    }

    /**
     * The column <code>spring_boot.sys_permission_funoperation.funId</code>.
     */
    public final TableField<SysPermissionFunoperationRecord, String> FUNID = createField("funId", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>spring_boot.sys_permission_funoperation.resourcesId</code>.
     */
    public final TableField<SysPermissionFunoperationRecord, String> RESOURCESID = createField("resourcesId", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>spring_boot.sys_permission_funoperation</code> table reference
     */
    public SysPermissionFunoperation() {
        this("sys_permission_funoperation", null);
    }

    /**
     * Create an aliased <code>spring_boot.sys_permission_funoperation</code> table reference
     */
    public SysPermissionFunoperation(String alias) {
        this(alias, SYS_PERMISSION_FUNOPERATION);
    }

    private SysPermissionFunoperation(String alias, Table<SysPermissionFunoperationRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysPermissionFunoperation(String alias, Table<SysPermissionFunoperationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "权限操作关联表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringBoot.SPRING_BOOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysPermissionFunoperationRecord> getPrimaryKey() {
        return Keys.KEY_SYS_PERMISSION_FUNOPERATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysPermissionFunoperationRecord>> getKeys() {
        return Arrays.<UniqueKey<SysPermissionFunoperationRecord>>asList(Keys.KEY_SYS_PERMISSION_FUNOPERATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermissionFunoperation as(String alias) {
        return new SysPermissionFunoperation(alias, this);
    }

    /**
     * Rename this table
     */
    public SysPermissionFunoperation rename(String name) {
        return new SysPermissionFunoperation(name, null);
    }
}
