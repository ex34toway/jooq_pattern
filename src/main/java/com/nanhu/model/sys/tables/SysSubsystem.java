/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables;


import com.nanhu.model.sys.Keys;
import com.nanhu.model.sys.SpringBoot;
import com.nanhu.model.sys.tables.records.SysSubsystemRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 子系统
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysSubsystem extends TableImpl<SysSubsystemRecord> {

    private static final long serialVersionUID = -1628681756;

    /**
     * The reference instance of <code>spring_boot.sys_subsystem</code>
     */
    public static final SysSubsystem SYS_SUBSYSTEM = new SysSubsystem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysSubsystemRecord> getRecordType() {
        return SysSubsystemRecord.class;
    }

    /**
     * The column <code>spring_boot.sys_subsystem.id</code>.
     */
    public final TableField<SysSubsystemRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.subSystemName</code>.
     */
    public final TableField<SysSubsystemRecord, String> SUBSYSTEMNAME = createField("subSystemName", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.systemUrl</code>. 系统默认地址
     */
    public final TableField<SysSubsystemRecord, String> SYSTEMURL = createField("systemUrl", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "系统默认地址");

    /**
     * The column <code>spring_boot.sys_subsystem.subSystemCode</code>.
     */
    public final TableField<SysSubsystemRecord, String> SUBSYSTEMCODE = createField("subSystemCode", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.status</code>.
     */
    public final TableField<SysSubsystemRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.sort</code>.
     */
    public final TableField<SysSubsystemRecord, Byte> SORT = createField("sort", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.creator</code>.
     */
    public final TableField<SysSubsystemRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.modifier</code>.
     */
    public final TableField<SysSubsystemRecord, String> MODIFIER = createField("modifier", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.createDate</code>.
     */
    public final TableField<SysSubsystemRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.modifyDate</code>.
     */
    public final TableField<SysSubsystemRecord, Timestamp> MODIFYDATE = createField("modifyDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>spring_boot.sys_subsystem.remark</code>.
     */
    public final TableField<SysSubsystemRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>spring_boot.sys_subsystem</code> table reference
     */
    public SysSubsystem() {
        this("sys_subsystem", null);
    }

    /**
     * Create an aliased <code>spring_boot.sys_subsystem</code> table reference
     */
    public SysSubsystem(String alias) {
        this(alias, SYS_SUBSYSTEM);
    }

    private SysSubsystem(String alias, Table<SysSubsystemRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysSubsystem(String alias, Table<SysSubsystemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "子系统");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringBoot.SPRING_BOOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysSubsystemRecord> getPrimaryKey() {
        return Keys.KEY_SYS_SUBSYSTEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysSubsystemRecord>> getKeys() {
        return Arrays.<UniqueKey<SysSubsystemRecord>>asList(Keys.KEY_SYS_SUBSYSTEM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSubsystem as(String alias) {
        return new SysSubsystem(alias, this);
    }

    /**
     * Rename this table
     */
    public SysSubsystem rename(String name) {
        return new SysSubsystem(name, null);
    }
}
