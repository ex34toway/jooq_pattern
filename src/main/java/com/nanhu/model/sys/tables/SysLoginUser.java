/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables;


import com.nanhu.model.sys.Keys;
import com.nanhu.model.sys.SpringBoot;
import com.nanhu.model.sys.tables.records.SysLoginUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysLoginUser extends TableImpl<SysLoginUserRecord> {

    private static final long serialVersionUID = -1111768894;

    /**
     * The reference instance of <code>spring_boot.sys_login_user</code>
     */
    public static final SysLoginUser SYS_LOGIN_USER = new SysLoginUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysLoginUserRecord> getRecordType() {
        return SysLoginUserRecord.class;
    }

    /**
     * The column <code>spring_boot.sys_login_user.id</code>. id
     */
    public final TableField<SysLoginUserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "id");

    /**
     * The column <code>spring_boot.sys_login_user.groupId</code>. 组ID
     */
    public final TableField<SysLoginUserRecord, String> GROUPID = createField("groupId", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "组ID");

    /**
     * The column <code>spring_boot.sys_login_user.loginName</code>. 登录名
     */
    public final TableField<SysLoginUserRecord, String> LOGINNAME = createField("loginName", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "登录名");

    /**
     * The column <code>spring_boot.sys_login_user.password</code>. 密码
     */
    public final TableField<SysLoginUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "密码");

    /**
     * The column <code>spring_boot.sys_login_user.userName</code>. 用户名称
     */
    public final TableField<SysLoginUserRecord, String> USERNAME = createField("userName", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "用户名称");

    /**
     * The column <code>spring_boot.sys_login_user.mobile</code>. 手机号码
     */
    public final TableField<SysLoginUserRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "手机号码");

    /**
     * The column <code>spring_boot.sys_login_user.email</code>. 邮箱
     */
    public final TableField<SysLoginUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "邮箱");

    /**
     * The column <code>spring_boot.sys_login_user.salt</code>. 密钥
     */
    public final TableField<SysLoginUserRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "密钥");

    /**
     * The column <code>spring_boot.sys_login_user.status</code>. 状态(99：删除,10：启用 ,20：禁用 30临时)
     */
    public final TableField<SysLoginUserRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态(99：删除,10：启用 ,20：禁用 30临时)");

    /**
     * The column <code>spring_boot.sys_login_user.sort</code>. 排序
     */
    public final TableField<SysLoginUserRecord, Byte> SORT = createField("sort", org.jooq.impl.SQLDataType.TINYINT, this, "排序");

    /**
     * The column <code>spring_boot.sys_login_user.creator</code>. 创建用户Id
     */
    public final TableField<SysLoginUserRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "创建用户Id");

    /**
     * The column <code>spring_boot.sys_login_user.modifier</code>. 修改用户Id
     */
    public final TableField<SysLoginUserRecord, String> MODIFIER = createField("modifier", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "修改用户Id");

    /**
     * The column <code>spring_boot.sys_login_user.createDate</code>. 创建时间
     */
    public final TableField<SysLoginUserRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>spring_boot.sys_login_user.modifyDate</code>. 修改时间
     */
    public final TableField<SysLoginUserRecord, Timestamp> MODIFYDATE = createField("modifyDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>spring_boot.sys_login_user.remark</code>. 备注
     */
    public final TableField<SysLoginUserRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "备注");

    /**
     * Create a <code>spring_boot.sys_login_user</code> table reference
     */
    public SysLoginUser() {
        this("sys_login_user", null);
    }

    /**
     * Create an aliased <code>spring_boot.sys_login_user</code> table reference
     */
    public SysLoginUser(String alias) {
        this(alias, SYS_LOGIN_USER);
    }

    private SysLoginUser(String alias, Table<SysLoginUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysLoginUser(String alias, Table<SysLoginUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringBoot.SPRING_BOOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysLoginUserRecord> getPrimaryKey() {
        return Keys.KEY_SYS_LOGIN_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysLoginUserRecord>> getKeys() {
        return Arrays.<UniqueKey<SysLoginUserRecord>>asList(Keys.KEY_SYS_LOGIN_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysLoginUser as(String alias) {
        return new SysLoginUser(alias, this);
    }

    /**
     * Rename this table
     */
    public SysLoginUser rename(String name) {
        return new SysLoginUser(name, null);
    }
}
