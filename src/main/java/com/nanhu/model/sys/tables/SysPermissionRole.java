/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables;


import com.nanhu.model.sys.SpringBoot;
import com.nanhu.model.sys.tables.records.SysPermissionRoleRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermissionRole extends TableImpl<SysPermissionRoleRecord> {

    private static final long serialVersionUID = -958563758;

    /**
     * The reference instance of <code>spring_boot.sys_permission_role</code>
     */
    public static final SysPermissionRole SYS_PERMISSION_ROLE = new SysPermissionRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysPermissionRoleRecord> getRecordType() {
        return SysPermissionRoleRecord.class;
    }

    /**
     * The column <code>spring_boot.sys_permission_role.roleId</code>. 角色Id
     */
    public final TableField<SysPermissionRoleRecord, String> ROLEID = createField("roleId", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "角色Id");

    /**
     * The column <code>spring_boot.sys_permission_role.roleCode</code>. 角色编码
     */
    public final TableField<SysPermissionRoleRecord, String> ROLECODE = createField("roleCode", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "角色编码");

    /**
     * The column <code>spring_boot.sys_permission_role.resourcesId</code>. 资源ID
     */
    public final TableField<SysPermissionRoleRecord, String> RESOURCESID = createField("resourcesId", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "资源ID");

    /**
     * Create a <code>spring_boot.sys_permission_role</code> table reference
     */
    public SysPermissionRole() {
        this("sys_permission_role", null);
    }

    /**
     * Create an aliased <code>spring_boot.sys_permission_role</code> table reference
     */
    public SysPermissionRole(String alias) {
        this(alias, SYS_PERMISSION_ROLE);
    }

    private SysPermissionRole(String alias, Table<SysPermissionRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysPermissionRole(String alias, Table<SysPermissionRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringBoot.SPRING_BOOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermissionRole as(String alias) {
        return new SysPermissionRole(alias, this);
    }

    /**
     * Rename this table
     */
    public SysPermissionRole rename(String name) {
        return new SysPermissionRole(name, null);
    }
}
