/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables.records;


import com.nanhu.model.sys.tables.SysPermissionRole;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermissionRoleRecord extends TableRecordImpl<SysPermissionRoleRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 367059195;

    /**
     * Setter for <code>spring_boot.sys_permission_role.roleId</code>. 角色Id
     */
    public void setRoleid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>spring_boot.sys_permission_role.roleId</code>. 角色Id
     */
    public String getRoleid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>spring_boot.sys_permission_role.roleCode</code>. 角色编码
     */
    public void setRolecode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>spring_boot.sys_permission_role.roleCode</code>. 角色编码
     */
    public String getRolecode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spring_boot.sys_permission_role.resourcesId</code>. 资源ID
     */
    public void setResourcesid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>spring_boot.sys_permission_role.resourcesId</code>. 资源ID
     */
    public String getResourcesid() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SysPermissionRole.SYS_PERMISSION_ROLE.ROLEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SysPermissionRole.SYS_PERMISSION_ROLE.ROLECODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SysPermissionRole.SYS_PERMISSION_ROLE.RESOURCESID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getRoleid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRolecode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getResourcesid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermissionRoleRecord value1(String value) {
        setRoleid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermissionRoleRecord value2(String value) {
        setRolecode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermissionRoleRecord value3(String value) {
        setResourcesid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysPermissionRoleRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysPermissionRoleRecord
     */
    public SysPermissionRoleRecord() {
        super(SysPermissionRole.SYS_PERMISSION_ROLE);
    }

    /**
     * Create a detached, initialised SysPermissionRoleRecord
     */
    public SysPermissionRoleRecord(String roleid, String rolecode, String resourcesid) {
        super(SysPermissionRole.SYS_PERMISSION_ROLE);

        set(0, roleid);
        set(1, rolecode);
        set(2, resourcesid);
    }
}
