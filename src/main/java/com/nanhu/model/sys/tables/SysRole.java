/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables;


import com.nanhu.model.sys.SpringBoot;
import com.nanhu.model.sys.tables.records.SysRoleRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRole extends TableImpl<SysRoleRecord> {

    private static final long serialVersionUID = 748095030;

    /**
     * The reference instance of <code>spring_boot.sys_role</code>
     */
    public static final SysRole SYS_ROLE = new SysRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysRoleRecord> getRecordType() {
        return SysRoleRecord.class;
    }

    /**
     * The column <code>spring_boot.sys_role.id</code>. 角色ID
     */
    public final TableField<SysRoleRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "角色ID");

    /**
     * The column <code>spring_boot.sys_role.roleName</code>. 角色名称
     */
    public final TableField<SysRoleRecord, String> ROLENAME = createField("roleName", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "角色名称");

    /**
     * The column <code>spring_boot.sys_role.roleCode</code>. 角色编码
     */
    public final TableField<SysRoleRecord, String> ROLECODE = createField("roleCode", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "角色编码");

    /**
     * The column <code>spring_boot.sys_role.roleParentId</code>. 角色父节点
     */
    public final TableField<SysRoleRecord, String> ROLEPARENTID = createField("roleParentId", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色父节点");

    /**
     * The column <code>spring_boot.sys_role.status</code>. 状态(99：删除,10：启用 ,20：禁用)
     */
    public final TableField<SysRoleRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态(99：删除,10：启用 ,20：禁用)");

    /**
     * The column <code>spring_boot.sys_role.sort</code>. 排序
     */
    public final TableField<SysRoleRecord, Byte> SORT = createField("sort", org.jooq.impl.SQLDataType.TINYINT, this, "排序");

    /**
     * The column <code>spring_boot.sys_role.creator</code>. 创建用户Id
     */
    public final TableField<SysRoleRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "创建用户Id");

    /**
     * The column <code>spring_boot.sys_role.modifier</code>. 修改用户Id
     */
    public final TableField<SysRoleRecord, String> MODIFIER = createField("modifier", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "修改用户Id");

    /**
     * The column <code>spring_boot.sys_role.createDate</code>. 创建时间
     */
    public final TableField<SysRoleRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>spring_boot.sys_role.modifyDate</code>. 修改时间
     */
    public final TableField<SysRoleRecord, Timestamp> MODIFYDATE = createField("modifyDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>spring_boot.sys_role.remark</code>. 备注
     */
    public final TableField<SysRoleRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "备注");

    /**
     * Create a <code>spring_boot.sys_role</code> table reference
     */
    public SysRole() {
        this("sys_role", null);
    }

    /**
     * Create an aliased <code>spring_boot.sys_role</code> table reference
     */
    public SysRole(String alias) {
        this(alias, SYS_ROLE);
    }

    private SysRole(String alias, Table<SysRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysRole(String alias, Table<SysRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringBoot.SPRING_BOOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysRole as(String alias) {
        return new SysRole(alias, this);
    }

    /**
     * Rename this table
     */
    public SysRole rename(String name) {
        return new SysRole(name, null);
    }
}
