/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables;


import com.nanhu.model.sys.SpringBoot;
import com.nanhu.model.sys.tables.records.SysResourcesRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * 资源表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysResources extends TableImpl<SysResourcesRecord> {

    private static final long serialVersionUID = -1517807256;

    /**
     * The reference instance of <code>spring_boot.sys_resources</code>
     */
    public static final SysResources SYS_RESOURCES = new SysResources();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysResourcesRecord> getRecordType() {
        return SysResourcesRecord.class;
    }

    /**
     * The column <code>spring_boot.sys_resources.id</code>. 资源ID
     */
    public final TableField<SysResourcesRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "资源ID");

    /**
     * The column <code>spring_boot.sys_resources.resourcesName</code>. 资源名称
     */
    public final TableField<SysResourcesRecord, String> RESOURCESNAME = createField("resourcesName", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "资源名称");

    /**
     * The column <code>spring_boot.sys_resources.resourcesType</code>. 资源类型（10：访问子系统、20：菜单访问、30：功能操作）
     */
    public final TableField<SysResourcesRecord, Byte> RESOURCESTYPE = createField("resourcesType", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "资源类型（10：访问子系统、20：菜单访问、30：功能操作）");

    /**
     * The column <code>spring_boot.sys_resources.status</code>. 状态(99：删除,10：启用 ,20：禁用)
     */
    public final TableField<SysResourcesRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态(99：删除,10：启用 ,20：禁用)");

    /**
     * The column <code>spring_boot.sys_resources.sort</code>. 排序
     */
    public final TableField<SysResourcesRecord, Byte> SORT = createField("sort", org.jooq.impl.SQLDataType.TINYINT, this, "排序");

    /**
     * The column <code>spring_boot.sys_resources.creator</code>. 创建用户Id
     */
    public final TableField<SysResourcesRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "创建用户Id");

    /**
     * The column <code>spring_boot.sys_resources.modifier</code>. 修改用户Id
     */
    public final TableField<SysResourcesRecord, String> MODIFIER = createField("modifier", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "修改用户Id");

    /**
     * The column <code>spring_boot.sys_resources.createDate</code>. 创建时间
     */
    public final TableField<SysResourcesRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>spring_boot.sys_resources.modifyDate</code>. 修改时间
     */
    public final TableField<SysResourcesRecord, Timestamp> MODIFYDATE = createField("modifyDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>spring_boot.sys_resources.remark</code>. 备注
     */
    public final TableField<SysResourcesRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "备注");

    /**
     * Create a <code>spring_boot.sys_resources</code> table reference
     */
    public SysResources() {
        this("sys_resources", null);
    }

    /**
     * Create an aliased <code>spring_boot.sys_resources</code> table reference
     */
    public SysResources(String alias) {
        this(alias, SYS_RESOURCES);
    }

    private SysResources(String alias, Table<SysResourcesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysResources(String alias, Table<SysResourcesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "资源表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringBoot.SPRING_BOOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysResources as(String alias) {
        return new SysResources(alias, this);
    }

    /**
     * Rename this table
     */
    public SysResources rename(String name) {
        return new SysResources(name, null);
    }
}
