/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables;


import com.nanhu.model.sys.SpringBoot;
import com.nanhu.model.sys.tables.records.SysLoginLogRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * 用户登录日志
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysLoginLog extends TableImpl<SysLoginLogRecord> {

    private static final long serialVersionUID = 1049442348;

    /**
     * The reference instance of <code>spring_boot.sys_login_log</code>
     */
    public static final SysLoginLog SYS_LOGIN_LOG = new SysLoginLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysLoginLogRecord> getRecordType() {
        return SysLoginLogRecord.class;
    }

    /**
     * The column <code>spring_boot.sys_login_log.id</code>. id
     */
    public final TableField<SysLoginLogRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "id");

    /**
     * The column <code>spring_boot.sys_login_log.userId</code>. 登录用户UserId
     */
    public final TableField<SysLoginLogRecord, String> USERID = createField("userId", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "登录用户UserId");

    /**
     * The column <code>spring_boot.sys_login_log.loginIp</code>.
     */
    public final TableField<SysLoginLogRecord, String> LOGINIP = createField("loginIp", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>spring_boot.sys_login_log.loginDate</code>. 登录时间
     */
    public final TableField<SysLoginLogRecord, Timestamp> LOGINDATE = createField("loginDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "登录时间");

    /**
     * The column <code>spring_boot.sys_login_log.expireTime</code>. 过期时间
     */
    public final TableField<SysLoginLogRecord, Long> EXPIRETIME = createField("expireTime", org.jooq.impl.SQLDataType.BIGINT, this, "过期时间");

    /**
     * The column <code>spring_boot.sys_login_log.createBy</code>.
     */
    public final TableField<SysLoginLogRecord, String> CREATEBY = createField("createBy", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>spring_boot.sys_login_log.updateBy</code>.
     */
    public final TableField<SysLoginLogRecord, String> UPDATEBY = createField("updateBy", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>spring_boot.sys_login_log.createDate</code>.
     */
    public final TableField<SysLoginLogRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>spring_boot.sys_login_log.updateDate</code>.
     */
    public final TableField<SysLoginLogRecord, Timestamp> UPDATEDATE = createField("updateDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>spring_boot.sys_login_log</code> table reference
     */
    public SysLoginLog() {
        this("sys_login_log", null);
    }

    /**
     * Create an aliased <code>spring_boot.sys_login_log</code> table reference
     */
    public SysLoginLog(String alias) {
        this(alias, SYS_LOGIN_LOG);
    }

    private SysLoginLog(String alias, Table<SysLoginLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysLoginLog(String alias, Table<SysLoginLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户登录日志");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringBoot.SPRING_BOOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysLoginLog as(String alias) {
        return new SysLoginLog(alias, this);
    }

    /**
     * Rename this table
     */
    public SysLoginLog rename(String name) {
        return new SysLoginLog(name, null);
    }
}
