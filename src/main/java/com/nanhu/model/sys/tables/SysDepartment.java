/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.sys.tables;


import com.nanhu.model.sys.SpringBoot;
import com.nanhu.model.sys.tables.records.SysDepartmentRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * 部门
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysDepartment extends TableImpl<SysDepartmentRecord> {

    private static final long serialVersionUID = 1195029908;

    /**
     * The reference instance of <code>spring_boot.sys_department</code>
     */
    public static final SysDepartment SYS_DEPARTMENT = new SysDepartment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysDepartmentRecord> getRecordType() {
        return SysDepartmentRecord.class;
    }

    /**
     * The column <code>spring_boot.sys_department.id</code>. 组ID
     */
    public final TableField<SysDepartmentRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "组ID");

    /**
     * The column <code>spring_boot.sys_department.depCode</code>. 部门编码
     */
    public final TableField<SysDepartmentRecord, String> DEPCODE = createField("depCode", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "部门编码");

    /**
     * The column <code>spring_boot.sys_department.depName</code>. 组名称
     */
    public final TableField<SysDepartmentRecord, String> DEPNAME = createField("depName", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "组名称");

    /**
     * The column <code>spring_boot.sys_department.orgId</code>. 组织ID
     */
    public final TableField<SysDepartmentRecord, String> ORGID = createField("orgId", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "组织ID");

    /**
     * The column <code>spring_boot.sys_department.orgCode</code>. 公司编码
     */
    public final TableField<SysDepartmentRecord, String> ORGCODE = createField("orgCode", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "公司编码");

    /**
     * The column <code>spring_boot.sys_department.depParentId</code>. 组父节点
     */
    public final TableField<SysDepartmentRecord, String> DEPPARENTID = createField("depParentId", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "组父节点");

    /**
     * The column <code>spring_boot.sys_department.status</code>. 状态(99：删除,10：启用 ,20：禁用)
     */
    public final TableField<SysDepartmentRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "状态(99：删除,10：启用 ,20：禁用)");

    /**
     * The column <code>spring_boot.sys_department.sort</code>. 排序
     */
    public final TableField<SysDepartmentRecord, Byte> SORT = createField("sort", org.jooq.impl.SQLDataType.TINYINT, this, "排序");

    /**
     * The column <code>spring_boot.sys_department.creator</code>. 创建用户Id
     */
    public final TableField<SysDepartmentRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "创建用户Id");

    /**
     * The column <code>spring_boot.sys_department.modifier</code>. 修改用户Id
     */
    public final TableField<SysDepartmentRecord, String> MODIFIER = createField("modifier", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "修改用户Id");

    /**
     * The column <code>spring_boot.sys_department.createDate</code>. 创建时间
     */
    public final TableField<SysDepartmentRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>spring_boot.sys_department.modifyDate</code>. 修改时间
     */
    public final TableField<SysDepartmentRecord, Timestamp> MODIFYDATE = createField("modifyDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>spring_boot.sys_department.remark</code>. 备注
     */
    public final TableField<SysDepartmentRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "备注");

    /**
     * Create a <code>spring_boot.sys_department</code> table reference
     */
    public SysDepartment() {
        this("sys_department", null);
    }

    /**
     * Create an aliased <code>spring_boot.sys_department</code> table reference
     */
    public SysDepartment(String alias) {
        this(alias, SYS_DEPARTMENT);
    }

    private SysDepartment(String alias, Table<SysDepartmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysDepartment(String alias, Table<SysDepartmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "部门");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringBoot.SPRING_BOOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysDepartment as(String alias) {
        return new SysDepartment(alias, this);
    }

    /**
     * Rename this table
     */
    public SysDepartment rename(String name) {
        return new SysDepartment(name, null);
    }
}
