/**
 * This class is generated by jOOQ
 */
package com.nanhu.model.story.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoryRecord extends org.jooq.impl.UpdatableRecordImpl<com.nanhu.model.story.tables.records.StoryRecord> implements org.jooq.Record8<java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> {

	private static final long serialVersionUID = 1113605122;

	/**
	 * Setter for <code>spring_boot.story.id</code>.
	 */
	public void setId(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>spring_boot.story.id</code>.
	 */
	public java.lang.String getId() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>spring_boot.story.plot</code>.
	 */
	public void setPlot(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>spring_boot.story.plot</code>.
	 */
	public java.lang.String getPlot() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>spring_boot.story.writer</code>.
	 */
	public void setWriter(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>spring_boot.story.writer</code>.
	 */
	public java.lang.String getWriter() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>spring_boot.story.upvotes</code>.
	 */
	public void setUpvotes(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>spring_boot.story.upvotes</code>.
	 */
	public java.lang.Long getUpvotes() {
		return (java.lang.Long) getValue(3);
	}

	/**
	 * Setter for <code>spring_boot.story.createdBy</code>.
	 */
	public void setCreatedby(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>spring_boot.story.createdBy</code>.
	 */
	public java.lang.String getCreatedby() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>spring_boot.story.updatedBy</code>.
	 */
	public void setUpdatedby(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>spring_boot.story.updatedBy</code>.
	 */
	public java.lang.String getUpdatedby() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>spring_boot.story.createdDate</code>.
	 */
	public void setCreateddate(java.sql.Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>spring_boot.story.createdDate</code>.
	 */
	public java.sql.Timestamp getCreateddate() {
		return (java.sql.Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>spring_boot.story.updatedDate</code>.
	 */
	public void setUpdateddate(java.sql.Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>spring_boot.story.updatedDate</code>.
	 */
	public java.sql.Timestamp getUpdateddate() {
		return (java.sql.Timestamp) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return com.nanhu.model.story.tables.Story.STORY.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.nanhu.model.story.tables.Story.STORY.PLOT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return com.nanhu.model.story.tables.Story.STORY.WRITER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field4() {
		return com.nanhu.model.story.tables.Story.STORY.UPVOTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return com.nanhu.model.story.tables.Story.STORY.CREATEDBY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return com.nanhu.model.story.tables.Story.STORY.UPDATEDBY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field7() {
		return com.nanhu.model.story.tables.Story.STORY.CREATEDDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return com.nanhu.model.story.tables.Story.STORY.UPDATEDDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getPlot();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getWriter();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value4() {
		return getUpvotes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getCreatedby();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getUpdatedby();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value7() {
		return getCreateddate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getUpdateddate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord value1(java.lang.String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord value2(java.lang.String value) {
		setPlot(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord value3(java.lang.String value) {
		setWriter(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord value4(java.lang.Long value) {
		setUpvotes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord value5(java.lang.String value) {
		setCreatedby(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord value6(java.lang.String value) {
		setUpdatedby(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord value7(java.sql.Timestamp value) {
		setCreateddate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord value8(java.sql.Timestamp value) {
		setUpdateddate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoryRecord values(java.lang.String value1, java.lang.String value2, java.lang.String value3, java.lang.Long value4, java.lang.String value5, java.lang.String value6, java.sql.Timestamp value7, java.sql.Timestamp value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StoryRecord
	 */
	public StoryRecord() {
		super(com.nanhu.model.story.tables.Story.STORY);
	}

	/**
	 * Create a detached, initialised StoryRecord
	 */
	public StoryRecord(java.lang.String id, java.lang.String plot, java.lang.String writer, java.lang.Long upvotes, java.lang.String createdby, java.lang.String updatedby, java.sql.Timestamp createddate, java.sql.Timestamp updateddate) {
		super(com.nanhu.model.story.tables.Story.STORY);

		setValue(0, id);
		setValue(1, plot);
		setValue(2, writer);
		setValue(3, upvotes);
		setValue(4, createdby);
		setValue(5, updatedby);
		setValue(6, createddate);
		setValue(7, updateddate);
	}
}
